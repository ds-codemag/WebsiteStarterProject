// -----------------------------------------------------------------------------
// Helper classes
//
// - Sizing
// - Float
// - Text alignment
// -----------------------------------------------------------------------------

// ---------------------------------------------------------------------- Sizing

@if $sizing-classes {
    @each $prop, $abbrev in (width: w, height: h) {
        @each $size, $length in $sizes {
            .#{$abbrev}-#{$size} { #{$prop}: $length !important; }
        }
    }

    .mw-100 {
        max-width: 100% !important;
    }

    .mh-100 {
        max-height: 100% !important;
    }
}

// ----------------------------------------------------------------------- Float

@if $float-classes {
    @each $breakpoint in map-keys($grid-breakpoints) {
        @include media-min-width($breakpoint) {
            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

            .float#{$infix}-left  { float: left !important; }
            .float#{$infix}-right { float: right !important; }
            .float#{$infix}-none  { float: none !important; }
        }
    }
}

// ------------------------------------------------------------------------ Text

@if $text-classes {
    // Alignment
    .text-nowrap   { white-space: nowrap !important; }
    .text-truncate { @include text-truncate; }

    // Responsive alignment
    @each $breakpoint in map-keys($grid-breakpoints) {
        @include media-min-width($breakpoint) {
            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

            .text#{$infix}-left   { text-align: left !important; }
            .text#{$infix}-right  { text-align: right !important; }
            .text#{$infix}-center { text-align: center !important; }
            .text#{$infix}-justify  { text-align: justify !important; }
        }
    }

    // Transformation
    .text-lowercase  { text-transform: lowercase !important; }
    .text-uppercase  { text-transform: uppercase !important; }
    .text-capitalize { text-transform: capitalize !important; }

    // Misc
    .text-hide {
        @include text-hide();
    }
}

// --------------------------------------------------------------------- Spacing

@if $spacing-classes {
    @each $breakpoint in map-keys($grid-breakpoints) {
        @include media-min-width($breakpoint) {
            $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

            @each $prop, $abbrev in (margin: m, padding: p) {
                @each $size, $length in $spacers {

                    .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
                    .#{$abbrev}t#{$infix}-#{$size},
                    .#{$abbrev}y#{$infix}-#{$size} {
                        #{$prop}-top: $length !important;
                    }

                    .#{$abbrev}r#{$infix}-#{$size},
                    .#{$abbrev}x#{$infix}-#{$size} {
                        #{$prop}-right: $length !important;
                    }

                    .#{$abbrev}b#{$infix}-#{$size},
                    .#{$abbrev}y#{$infix}-#{$size} {
                        #{$prop}-bottom: $length !important;
                    }

                    .#{$abbrev}l#{$infix}-#{$size},
                    .#{$abbrev}x#{$infix}-#{$size} {
                        #{$prop}-left: $length !important;
                    }
                }
            }

            // Some special margin utils
            .m#{$infix}-auto { margin: auto !important; }
            .mt#{$infix}-auto,
            .my#{$infix}-auto {
                margin-top: auto !important;
            }

            .mr#{$infix}-auto,
            .mx#{$infix}-auto {
                margin-right: auto !important;
            }

            .mb#{$infix}-auto,
            .my#{$infix}-auto {
                margin-bottom: auto !important;
            }

            .ml#{$infix}-auto,
            .mx#{$infix}-auto {
                margin-left: auto !important;
            }
        }
    }
}
